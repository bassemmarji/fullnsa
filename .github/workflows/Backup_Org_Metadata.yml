name: Backup Org Metadata

on:
  # Scheduled run: 10:00 AM UTC on the 1st day of every month
  schedule:
    - cron: "0 10 1 * *"
  # Manual trigger
  workflow_dispatch:
    inputs:
      ORG_ALIAS:
        description: "Salesforce org alias"
        required: true
        default: "MY_ORG"
      USER_EMAIL:
        description: "Git user email"
        required: true
        default: "bassemmarji@gmail.com"
      USER_NAME:
        description: "Git user name"
        required: true
        default: "bassem marji"

env:
  ORG_ALIAS: ${{ github.event.inputs.ORG_ALIAS || 'MY_ORG' }}
  USER_EMAIL: ${{ github.event.inputs.USER_EMAIL || 'bassemmarji@gmail.com' }}
  USER_NAME: ${{ github.event.inputs.USER_NAME || 'bassem marji' }}
  NODE_VERSION: '20'
  NODE_OPTIONS: "--max-old-space-size=4096"
  TEMP_METADATA_DIR: "/tmp/orgMetadata"

jobs:
  collect_org_metadata:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Salesforce CLI + jq
        run: |
          sudo apt-get update -y
          npm install -g @salesforce/cli
          
      - name: Authenticate to Salesforce
        run: |
          echo "${{ secrets.ORG_SFDX_URL }}" | sf org login sfdx-url \
            --alias "${{ env.ORG_ALIAS }}" \
            --sfdx-url-stdin

      - name: Generate package.xml manually
        run: |
          echo "Generating comprehensive package.xml with all metadata types..."
          mkdir -p ${{ env.TEMP_METADATA_DIR }}/manifest
          cat <<EOF > ${{ env.TEMP_METADATA_DIR }}/manifest/package.xml
          <?xml version="1.0" encoding="UTF-8"?>
          <Package xmlns="http://soap.sforce.com/2006/04/metadata">
              <types>
                  <members>*</members>
                  <name>ActionLinkGroupTemplate</name>
              </types>
              <types>
                  <members>*</members>
                  <name>AnalyticSnapshot</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ApexClass</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ApexComponent</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ApexPage</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ApexTestSuite</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ApexTrigger</name>
              </types>
              <types>
                  <members>*</members>
                  <name>AppMenu</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ApprovalProcess</name>
              </types>
              <types>
                  <members>*</members>
                  <name>AssignmentRules</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Audience</name>
              </types>
              <types>
                  <members>*</members>
                  <name>AuraDefinitionBundle</name>
              </types>
              <types>
                  <members>*</members>
                  <name>AuthProvider</name>
              </types>
              <types>
                  <members>*</members>
                  <name>AutoResponseRules</name>
              </types>
              <types>
                  <members>*</members>
                  <name>BrandingSet</name>
              </types>
              <types>
                  <members>*</members>
                  <name>BusinessProcess</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CallCenter</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CaseSubjectParticle</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Certificate</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ChannelLayout</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ChatterExtension</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CleanDataService</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Community</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CommunityTemplateDefinition</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CompactLayout</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ConnectedApp</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ContentAsset</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CorsWhitelistOrigin</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CspTrustedSite</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CustomApplication</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CustomApplicationComponent</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CustomFeedFilter</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CustomField</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CustomLabels</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CustomMetadata</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CustomObject</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CustomObjectTranslation</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CustomPageWebLink</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CustomPermission</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CustomSite</name>
              </types>
              <types>
                  <members>*</members>
                  <name>CustomTab</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Dashboard</name>
              </types>
              <types>
                  <members>*</members>
                  <name>DataCategoryGroup</name>
              </types>
              <types>
                  <members>*</members>
                  <name>DelegateGroup</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Document</name>
              </types>
              <types>
                  <members>*</members>
                  <name>DocumentFolder</name>
              </types>
              <types>
                  <members>*</members>
                  <name>DuplicateRule</name>
              </types>
              <types>
                  <members>*</members>
                  <name>EclairGeoData</name>
              </types>
              <types>
                  <members>*</members>
                  <name>EmailFolder</name>
              </types>
              <types>
                  <members>*</members>
                  <name>EmailServicesFunction</name>
              </types>
              <types>
                  <members>*</members>
                  <name>EmailTemplate</name>
              </types>
              <types>
                  <members>*</members>
                  <name>EmbeddedServiceBranding</name>
              </types>
              <types>
                  <members>*</members>
                  <name>EmbeddedServiceConfig</name>
              </types>
              <types>
                  <members>*</members>
                  <name>EscalationRules</name>
              </types>
              <types>
                  <members>*</members>
                  <name>EventDelivery</name>
              </types>
              <types>
                  <members>*</members>
                  <name>EventSubscription</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ExternalDataSource</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ExternalServiceRegistration</name>
              </types>
              <types>
                  <members>*</members>
                  <name>FieldSet</name>
              </types>
              <types>
                  <members>*</members>
                  <name>FlexiPage</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Flow</name>
              </types>
              <types>
                  <members>*</members>
                  <name>FlowCategory</name>
              </types>
              <types>
                  <members>*</members>
                  <name>FlowDefinition</name>
              </types>
              <types>
                  <members>*</members>
                  <name>GlobalValueSet</name>
              </types>
              <types>
                  <members>*</members>
                  <name>GlobalValueSetTranslation</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Group</name>
              </types>
              <types>
                  <members>*</members>
                  <name>HomePageComponent</name>
              </types>
              <types>
                  <members>*</members>
                  <name>HomePageLayout</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Index</name>
              </types>
              <types>
                  <members>*</members>
                  <name>InstalledPackage</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Layout</name>
              </types>
              <types>
                  <members>*</members>
                  <name>LeadConvertSettings</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Letterhead</name>
              </types>
              <types>
                  <members>*</members>
                  <name>LightningBolt</name>
              </types>
              <types>
                  <members>*</members>
                  <name>LightningComponentBundle</name>
              </types>
              <types>
                  <members>*</members>
                  <name>LightningEmailTemplate</name>
              </types>
              <types>
                  <members>*</members>
                  <name>LightningExperiencePage</name>
              </types>
              <types>
                  <members>*</members>
                  <name>LightningExperienceTheme</name>
              </types>
              <types>
                  <members>*</members>
                  <name>LightningMessageChannel</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ListView</name>
              </types>
              <types>
                  <members>*</members>
                  <name>MatchingRules</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ModerationRule</name>
              </types>
              <types>
                  <members>*</members>
                  <name>NamedCredential</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Network</name>
              </types>
              <types>
                  <members>*</members>
                  <name>NetworkBranding</name>
              </types>
              <types>
                  <members>*</members>
                  <name>PathAssistant</name>
              </types>
              <types>
                  <members>*</members>
                  <name>PermissionSet</name>
              </types>
              <types>
                  <members>*</members>
                  <name>PlatformCachePartition</name>
              </types>
              <types>
                  <members>*</members>
                  <name>PlatformEvent</name>
              </types>
              <types>
                  <members>*</members>
                  <name>PostTemplate</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Profile</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ProfilePasswordPolicy</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ProfileSessionSetting</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Queue</name>
              </types>
              <types>
                  <members>*</members>
                  <name>QuickAction</name>
              </types>
              <types>
                  <members>*</members>
                  <name>RecordType</name>
              </types>
              <types>
                  <members>*</members>
                  <name>RemoteSiteSetting</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Report</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ReportFolder</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ReportType</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Role</name>
              </types>
              <types>
                  <members>*</members>
                  <name>SamlSsoConfig</name>
              </types>
              <types>
                  <members>*</members>
                  <name>SharingCriteriaRule</name>
              </types>
              <types>
                  <members>*</members>
                  <name>SharingOwnerRule</name>
              </types>
              <types>
                  <members>*</members>
                  <name>SharingReason</name>
              </types>
              <types>
                  <members>*</members>
                  <name>SharingRules</name>
              </types>
              <types>
                  <members>*</members>
                  <name>SharingSet</name>
              </types>
              <types>
                  <members>*</members>
                  <name>SiteDotCom</name>
              </types>
              <types>
                  <members>*</members>
                  <name>StandardValueSet</name>
              </types>
              <types>
                  <members>*</members>
                  <name>StandardValueSetTranslation</name>
              </types>
              <types>
                  <members>*</members>
                  <name>StaticResource</name>
              </types>
              <types>
                  <members>*</members>
                  <name>SynonymDictionary</name>
              </types>
              <types>
                  <members>*</members>
                  <name>TopicsForObjects</name>
              </types>
              <types>
                  <members>*</members>
                  <name>TransactionSecurityPolicy</name>
              </types>
              <types>
                  <members>*</members>
                  <name>UserCriteria</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ValidationRule</name>
              </types>
              <types>
                  <members>*</members>
                  <name>WebLink</name>
              </types>
              <types>
                  <members>*</members>
                  <name>Workflow</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ManagedTopic</name>
              </types>
              <types>
                  <members>*</members>
                  <name>ManagedTopics</name>
              </types>
              <version>62.0</version>
          </Package>
          EOF

          # Create minimal sfdx-project.json for valid DX project context
          cat <<EOF > ${{ env.TEMP_METADATA_DIR }}/sfdx-project.json
          {
            "packageDirectories": [
              {
                "path": "."
              }
            ],
            "name": "temp-backup-project",
            "namespace": "",
            "sfdcLoginUrl": "https://login.salesforce.com",
            "sourceApiVersion": "62.0"
          }
          EOF

          echo "package.xml and sfdx-project.json created successfully."
          ls -la ${{ env.TEMP_METADATA_DIR }}

      - name: Retrieve metadata from org
        run: |
          cd ${{ env.TEMP_METADATA_DIR }}
          sf project retrieve start --target-org "${{ env.ORG_ALIAS }}" --manifest manifest/package.xml --target-metadata-dir .
          cd -

      - name: Sanitize metadata before commit
        run: |
          echo "Sanitizing metadata: removing GitHub tokens and other secrets..."

          # Detect any GitHub token (ghp_, gho_, ghu_, ghs_, ghr_)
          find ${{ env.TEMP_METADATA_DIR }} -type f -name "*.xml" -print0 | while IFS= read -r -d '' file; do
            sed -i -E 's|(>gh[pousr]_[A-Za-z0-9]+<)|>[REDACTED]<|g' "$file"
          done

          # Double-check for any missed token-like strings (40+ char alphanumerics)
          find ${{ env.TEMP_METADATA_DIR }} -type f -name "*.xml" -exec sed -i -E 's|>[A-Za-z0-9]{35,}<|>[REDACTED]<|g' {} +

          echo "✅ Sanitization complete. All potential tokens replaced with [REDACTED]."
          
      - name: Commit and push backup branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Preparing to push metadata changes..."
          export BRANCH_NAME="BACKUP-$(date '+%Y-%m-%d')"

          git config --global user.email "$USER_EMAIL"
          git config --global user.name "$USER_NAME"

          # Create orphan branch (no history from main)
          git checkout --orphan "$BRANCH_NAME"

          # Clear all files from working dir and index
          git rm -rf .
          git clean -fd

          # Copy retrieved metadata (exclude temp project files)
          mkdir -p orgMetadata
          cp -r ${{ env.TEMP_METADATA_DIR }}/* orgMetadata/
          rm -rf orgMetadata/manifest orgMetadata/sfdx-project.json

          git add orgMetadata
          git commit -m "Full Org Metadata Backup - $(date '+%Y-%m-%d')" || echo "No changes to commit"
          git push origin "$BRANCH_NAME" -f  # -f to overwrite if branch exists

      - name: Cleanup temporary files
        if: always()
        run: |
          rm -rf ${{ env.TEMP_METADATA_DIR }}
          rm -f /tmp/sfdx.url
