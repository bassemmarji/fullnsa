name: Backup Org Metadata

on:
  # Scheduled run: 10:00 AM UTC on the 1st day of every month
  schedule:
    - cron: "0 10 1 * *"
  # Manual trigger
  workflow_dispatch:
    inputs:
      ORG_ALIAS:
        description: "Salesforce org alias"
        required: true
        default: "MY_ORG"
      USER_EMAIL:
        description: "Git user email"
        required: true
        default: "bassemmarji@gmail.com"
      USER_NAME:
        description: "Git user name"
        required: true
        default: "bassem marji"

env:
  ORG_ALIAS: ${{ github.event.inputs.ORG_ALIAS || 'MY_ORG' }}
  USER_EMAIL: ${{ github.event.inputs.USER_EMAIL || 'bassemmarji@gmail.com' }}
  USER_NAME: ${{ github.event.inputs.USER_NAME || 'bassem marji' }}
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  collect_org_metadata:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Salesforce CLI + jq
        run: |
          sudo apt-get update -y
          npm install -g @salesforce/cli
          
      - name: Authenticate to Salesforce
        run: |
          echo "${{ secrets.ORG_SFDX_URL }}" | sf org login sfdx-url \
            --alias "${{ github.event.inputs.org_alias }}" \
            --sfdx-url-stdin

      - name: Generate full package.xml covering all metadata
        run: |
          echo "Generating full package.xml for all metadata..."
          mkdir -p ./orgMetadata/manifest
          cd ./orgMetadata
          
          # Initialize an empty SFDX project
          sf project generate --name orgMetadata
          
          # Describe all metadata types available in the org
          sf metadata describe --target-org "$ORG_ALIAS" --json > mdtypes.json
          
          # Generate package.xml from that list
          sf metadata generate manifest --input mdtypes.json --output-file manifest/package.xml
          
          echo "Generated manifest/package.xml:"
          head -n 20 manifest/package.xml

      - name: Retrieve all org metadata
        run: |
          cd ./orgMetadata
          sf project retrieve start --target-org "$ORG_ALIAS" --manifest manifest/package.xml

      - name: Commit and push backup branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Preparing to push metadata changes..."
          export BRANCH_NAME="BACKUP-$(date '+%Y-%m-%d')"

          git config --global user.email "$USER_EMAIL"
          git config --global user.name "$USER_NAME"

          git add orgMetadata
          git commit -m "Full Org Metadata Backup - $(date '+%Y-%m-%d')" || echo "No changes to commit"
          git push origin "HEAD:$BRANCH_NAME"

      - name: Cleanup temporary files
        if: always()
        run: rm -f /tmp/sfdx.url





