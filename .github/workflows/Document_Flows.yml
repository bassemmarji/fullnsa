name: Document Flows

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'  # Weekly on Monday at midnight

env:
  ORG_ALIAS: org_alias
  REPORT_RECIPIENT: "bassemmarji@gmail.com"
  
jobs:
  document_org_flows:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout Repository'
        uses: actions/checkout@v4

      - name: 'Install Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 'Install Salesforce CLI'
        run: npm install @salesforce/cli --global

      - name: 'Install flowdoc Plugin'
        run: echo "Y" | sf plugins:install sfdx-flowdoc-plugin

      - name: 'Install jq'
        run: echo "Y" | sudo apt-get update && sudo apt-get install -y jq

      - name: 'Authorize to the Org'
        run: echo "${{ secrets.ORG_SFDX_URL }}" | sf org login sfdx-url --alias $ORG_ALIAS --set-default --sfdx-url-stdin

      - name: 'Create project with manifest, Navigate to the project folder, Download metadata using SFDX'
        run: |
          sf project generate --name "org-metadata"  --manifest
          cd "./org-metadata"
          sf project retrieve start --target-org $ORG_ALIAS --manifest manifest/package.xml

      - name: 'Run Flow Documenter'
        run: |
          # Create directories
          mkdir -p $GITHUB_WORKSPACE/flowDocuments
          
          # Ensure we're authenticated
          sf org list

          # Navigate to SFDX project
          cd $GITHUB_WORKSPACE/org-metadata

          # Run query and handle errors
          QUERY_RESULT=$(sf data query --query "SELECT ApiName FROM FlowDefinitionView ORDER BY LastModifiedDate DESC LIMIT 10" --target-org $ORG_ALIAS --json)
    
          # Debug: Print raw query result
          #echo "Query Result: $QUERY_RESULT"

          # Extract flow names or fail
          if echo "$QUERY_RESULT" | jq -e '.result' > /dev/null; then
             echo "$QUERY_RESULT" | jq -r '.result.records[].ApiName' > top_flows.txt
             echo "Flows to document:"
             cat top_flows.txt
          else
             echo "Error in query:"
             echo "$QUERY_RESULT" | jq '.message'
             exit 1
          fi

          cd $GITHUB_WORKSPACE/org-metadata
          echo "Current directory: $(pwd)"
          ls -la $GITHUB_WORKSPACE/org-metadata

          # Check list of flows available locally:
          find $GITHUB_WORKSPACE/org-metadata/force-app/main/default/flows -name "*.flow-meta.xml" | sed 's/.*\///; s/\..*/ /'

          #sf flowdoc pdf generate "Assign_tasks_to_Queue" -u $ORG_ALIAS -o $GITHUB_WORKSPACE/flowDocuments
          #sf flowdoc pdf generate Assign_tasks_to_Queue -o $GITHUB_WORKSPACE/flowDocuments

          # Generate PDFs
          #while read flow; do
          #      echo "Generating PDF for: $flow"
          #      cd $GITHUB_WORKSPACE/org-metadata
          #      sf flowdoc pdf generate "$flow" -u $ORG_ALIAS -o $GITHUB_WORKSPACE/flowDocuments && \
          #         echo "âœ… Successfully generated PDF for $flow"
          #done < top_flows.txt
          
      - name: 'List Generated Files'
        run: |
          echo "ðŸ“„ Listing files in flowDocuments:"
          ls -la $GITHUB_WORKSPACE/flowDocuments
