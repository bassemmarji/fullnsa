name: Salesforce Logs Analyzer

on:
  workflow_dispatch:
    inputs:
      org_alias:
        type: string
        description: "Salesforce org alias"
        required: true
        default: "dev"
      days_back:
        type: number
        description: "Number of days back to retrieve logs"
        required: true
        default: 30

    
env:
  ORG_ALIAS: ${{ github.event.inputs.org_alias }}
  DAYS_BACK: ${{ github.event.inputs.days_back }}
  NODE_VERSION: "20"
  LOG_DIR: "sf-logs"

jobs:
  collect-logs:
    name: Setup Environment & Collect Logs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          # Install Salesforce CLI
          npm install --global @salesforce/cli
          sf plugins:update
          sf --version
          
          # Install jq for JSON processing
          sudo apt-get update && sudo apt-get install -y jq
      
      - name: üîê Authenticate to Salesforce Org
        run: |
          if [ -z "${{ secrets.ORG_SFDX_URL }}" ]; then
            echo "‚ùå Error: ORG_SFDX_URL secret is missing"
            exit 1
          fi
          echo "${{ secrets.ORG_SFDX_URL }}" | sf org login sfdx-url --alias $ORG_ALIAS --set-default --sfdx-url-stdin
          sf org list

      - name: Retrieve Debug Logs
        timeout-minutes: 30
        run: |
          # Calculate start time
          START_TIME=$(date -u -d "$DAYS_BACK days ago" +'%Y-%m-%dT%H:%M:%SZ')
          echo "Retrieving logs since: $START_TIME"
          
          # Create log directory
          mkdir -p "$LOG_DIR"
          echo "Log directory: $LOG_DIR"
          
          # Query logs using SOQL
          # , Application, DurationMilliseconds, Location, LogLength, LogUserId, Operation, Request, StartTime, Status
          query="SELECT Id FROM ApexLog WHERE StartTime > $START_TIME"
          
          # Execute query and save results
          sf data query --query "$query" --target-org "$ORG_ALIAS" --result-format json > logs.json
          
          # Extract log IDs
          log_ids=$(jq -r '.result.records[].Id' logs.json)
          log_count=$(echo "$log_ids" | grep -v '^$' | wc -l)
          
          if [ "$log_count" -eq 0 ]; then
            echo "‚ö†Ô∏è No logs found in the last $DAYS_BACK days"
            touch "$LOG_DIR/no-logs-retrieved.txt"
          else
            echo "Found $log_count logs to download"
            
            # Download each log
            for logid in $log_ids; do
              echo "Downloading log: $logid"
              sf apex get log "$logid" \
                --target-org "$ORG_ALIAS" \
                --output-dir "$LOG_DIR" || echo "‚ö†Ô∏è Failed to download log $logid"
            done
          fi
          
          echo "log_count=$log_count" >> $GITHUB_ENV
          echo "‚úÖ Log retrieval completed"
      
      - name: Verify Log Retrieval
        run: |
          if [ -f "$LOG_DIR/no-logs-retrieved.txt" ]; then
            echo "‚ö†Ô∏è Warning: No logs found in the last $DAYS_BACK days - this may be expected behavior"
            exit 0
          elif [ -z "$(ls -A "$LOG_DIR")" ]; then
            echo "‚ùå Critical Error: Log directory is empty despite $log_count logs found"
            exit 1
          else
            echo "‚úÖ Retrieved $(ls "$LOG_DIR" | wc -l) log files from the last $DAYS_BACK days"
          fi
      
      - name: Archive Logs
        uses: actions/upload-artifact@v4
        with:
          name: salesforce-debug-logs
          path: ${{ env.LOG_DIR }}
          retention-days: 3
        if: ${{ always() }}




