name: Generate Apex Tests with Ollama (DeepSeek)

on:
  workflow_dispatch:
    inputs:
      ORG_ALIAS:
        type: string
        description: "Alias for the Salesforce org"
        required: true
        default: "orgAlias"

env:
  ORG_ALIAS: ${{ github.event.inputs.ORG_ALIAS }}

jobs:
  generate_test_classes:
    runs-on: ubuntu-latest

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: ‚ö° Install Salesforce CLI
        run: npm install --global @salesforce/cli

      - name: üîÑ Verify Salesforce CLI
        run: |
          npm update --global @salesforce/cli
          sf plugins:update
          sf --version

      - name: üß† Install Ollama
        run: |
          curl -fsSL https://ollama.com/install.sh | sh
          nohup ollama serve > /dev/null 2>&1 &

      - name: ‚è≥ Pull DeepSeek Model (6.7B)
        run: ollama pull deepseek-coder:6.7b

      - name: üîê Authenticate to Salesforce Org
        run: echo "${{ secrets.ORG_SFDX_URL }}" | sf org login sfdx-url --alias $ORG_ALIAS --set-default --sfdx-url-stdin

      - name: ‚úÖ Validate Org Authentication
        run: sf org list

      - name: üì¶ Retrieve Org Metadata
        run: |
          sf project generate --name "org-metadata" --manifest

          if [ -f "./config/package.xml" ]; then
            echo "Found custom package.xml"
            cp ./config/package.xml ./org-metadata/manifest
          fi

          cd ./org-metadata
          sf project retrieve start --target-org $ORG_ALIAS --manifest manifest/package.xml

      - name: üîç Find Up to 3 Apex Classes Without Tests
        id: find_missing
        run: |
          SRC_DIR="$GITHUB_WORKSPACE/org-metadata/force-app/main/default/classes"
          MISSING=""
          COUNT=0
      
          for FILE in $(find "$SRC_DIR" -name '*.cls' ! -name '*Test.cls' | sort); do
            CLASS=$(basename "$FILE" .cls)
            TEST_FILE="$SRC_DIR/${CLASS}Test.cls"
            if [ ! -f "$TEST_FILE" ]; then
              echo "Missing test for: $CLASS"
              MISSING="$MISSING $CLASS"
              COUNT=$((COUNT+1))
            fi
      
            if [ "$COUNT" -ge 3 ]; then
              break
            fi
          done
      
          echo "Selected classes: $MISSING"
          echo "classes=$MISSING" >> $GITHUB_OUTPUT

      - name: ‚úçÔ∏è Generate Test Classes Using Ollama
        if: ${{ steps.find_missing.outputs.classes != '' }}
        shell: bash
        run: |
          SRC_DIR="$GITHUB_WORKSPACE/org-metadata/force-app/main/default/classes"
      
          for CLASS in ${{ steps.find_missing.outputs.classes }}; do
            echo "Generating test class for: $CLASS"
      
            PROMPT="Write a Salesforce Apex test class named ${CLASS}Test for class ${CLASS}.cls using @isTest."
      
            RESPONSE=$(echo "$PROMPT" | ollama run deepseek-coder:6.7b | sed -E "s/\x1B(\[[0-9;]*[mK])//g")
      
            echo "$RESPONSE" > "$SRC_DIR/${CLASS}Test.cls"
      
            echo '<?xml version="1.0" encoding="UTF-8"?>' > "$SRC_DIR/${CLASS}Test.cls-meta.xml"
            echo '<ApexClass xmlns="http://soap.sforce.com/2006/04/metadata">' >> "$SRC_DIR/${CLASS}Test.cls-meta.xml"
            echo '    <apiVersion>59.0</apiVersion>' >> "$SRC_DIR/${CLASS}Test.cls-meta.xml"
            echo '    <status>Active</status>' >> "$SRC_DIR/${CLASS}Test.cls-meta.xml"
            echo '</ApexClass>' >> "$SRC_DIR/${CLASS}Test.cls-meta.xml"
      
            echo "‚úÖ Test class for $CLASS created."
          done

      - name: üß™ Display Generated Classes
        if: ${{ steps.find_missing.outputs.classes != '' }}
        run: |
          ORG_ALIAS=${{ env.ORG_ALIAS }}
          SRC_DIR="$GITHUB_WORKSPACE/org-metadata/force-app/main/default/classes"
          
          # Extract test class names (append 'Test' to each)
          TEST_CLASSES=""
          for CLASS in ${{ steps.find_missing.outputs.classes }}; do
            TEST_CLASSES="$TEST_CLASSES,${CLASS}Test"
          done
          TEST_CLASSES="${TEST_CLASSES#,}"  # Remove leading comma
          echo "üîç Running Apex tests for: $TEST_CLASSES"
      
      - name: üìÅ Collect Only Newly Generated Test Classes
        if: ${{ steps.find_missing.outputs.classes != '' }}
        run: |
          SRC_DIR="$GITHUB_WORKSPACE/org-metadata/force-app/main/default/classes"
          TEMP_DIR="$GITHUB_WORKSPACE/generated-tests"
      
          mkdir -p "$TEMP_DIR"
      
          for CLASS in ${{ steps.find_missing.outputs.classes }}; do
            cp "$SRC_DIR/${CLASS}Test.cls" "$TEMP_DIR/" 2>/dev/null || echo "‚ö†Ô∏è Missing ${CLASS}Test.cls"
            cp "$SRC_DIR/${CLASS}Test.cls-meta.xml" "$TEMP_DIR/" 2>/dev/null || echo "‚ö†Ô∏è Missing ${CLASS}Test.cls-meta.xml"
          done
      
      - name: üì¶ Upload Generated Apex Test Classes as Artifacts
        if: ${{ steps.find_missing.outputs.classes != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: generated-apex-test-classes
          path: generated-tests/
